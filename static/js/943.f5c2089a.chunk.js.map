{"version":3,"file":"static/js/943.f5c2089a.chunk.js","mappings":"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","sources":["algorithm/model/Gene.js","algorithm/model/Chromosome.js","algorithm/model/Population.js","constants/config.js","algorithm/crossover.js","algorithm/cost.js","algorithm/model/GeneticTimeTable.js","helpers/geneticWorker.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/node module decorator","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["// gene pool class for each class,faculty,subject,slots\r\nexport default class Gene {\r\n    constructor(teacher = \"\", subject = \"\") {\r\n        this.teacher = teacher;\r\n        this.subject = subject;\r\n    }\r\n}","\r\n//class of  chromosome for each generation\r\nexport default class Chromosome {\r\n    constructor(timetables = []) {\r\n        this.timetables = timetables;\r\n        this.cost = 0;\r\n    }\r\n}","import Gene from \"./Gene.js\";\r\nimport Chromosome from \"./Chromosome.js\";\r\nimport { POPULATION_SIZE } from \"../../constants/config.js\";\r\nimport _ from \"lodash\";\r\n\r\nexport default class Population {\r\n    // Initialize Population\r\n    constructor(working_days, classrooms, school_data) {\r\n        this.working_days = working_days;\r\n        this.classrooms = classrooms;\r\n        this.school_data = school_data;\r\n        this.genePool = this.createGenePool();\r\n        this.population = this.generatePopulation();\r\n    }\r\n\r\n    // Create a gene pool\r\n    createGenePool() {\r\n        let genePool = {};\r\n\r\n        // Initialize the gene pool\r\n        this.classrooms.forEach((classroom) => {\r\n            genePool[classroom] = [{ teacher: \"\", subject: \"\", slots: 0 }];\r\n        });\r\n\r\n        // Traverse the school data\r\n        this.school_data.forEach((section) => {\r\n            section.subjects.forEach((subject) => {\r\n                subject.faculty.forEach((teacher) => {\r\n                    teacher.classrooms.forEach((classroom) => {\r\n                        genePool[classroom].push({\r\n                            teacher: teacher.teacher,\r\n                            subject: subject.subject_name,\r\n                            slots: teacher.slots,\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n\r\n        return genePool;\r\n    }\r\n\r\n    // Get gene pool\r\n    getGenePool() {\r\n        return this.genePool;\r\n    }\r\n\r\n    // Generate a population of chromosomes\r\n    generatePopulation() {\r\n        let population = [];\r\n        for (let i = 0; i < POPULATION_SIZE; i++) {\r\n            let timetables = [];\r\n            this.classrooms.forEach((classroom) => {\r\n                let classTimetable = { classroom, timetable: [] };\r\n                this.working_days.forEach((day) => {\r\n                    let dayTimeTable = [];\r\n                    let slots = day.slots;\r\n                    for (let j = 0; j < slots; j++) {\r\n                        let randomSubject = _.sample(this.genePool[classroom]);\r\n                        dayTimeTable.push(\r\n                            new Gene(\r\n                                randomSubject.teacher,\r\n                                randomSubject.subject\r\n                            )\r\n                        );\r\n                    }\r\n                    classTimetable.timetable.push(dayTimeTable);\r\n                });\r\n                timetables.push(classTimetable);\r\n            });\r\n\r\n            population.push(new Chromosome(timetables));\r\n        }\r\n        return population;\r\n    }\r\n\r\n    // Get population\r\n    getPopulation() {\r\n        return this.population;\r\n    }\r\n}","// Genetic Algorithm Configuration\r\nexport const POPULATION_SIZE = 1000\r\nexport const MAX_GENERATION_SIZE = 10000\r\nexport const PARENT_SIZE = 100\r\nexport const CROSSOVER_RATE = 0.5\r\nexport const MUTATION_RATE = 0.02\r\nexport const SIMILARITY_THRESHOLD = 20","import { MUTATION_RATE, CROSSOVER_RATE } from \"../constants/config.js\";\r\nimport Chromosome from \"./model/Chromosome.js\";\r\nimport _ from \"lodash\";\r\nimport Gene from \"./model/Gene.js\";\r\n\r\nexport const crossover = (parent1, parent2, genePool, classrooms, days) => {\r\n    // Favour the better parent\r\n    if (parent2.cost > parent1.cost) {\r\n        const temp = parent1;\r\n        parent1 = parent2;\r\n        parent2 = temp;\r\n    }\r\n\r\n    // Create a new child\r\n    let timetables = [];\r\n    classrooms.forEach((classroom, i) => {\r\n        let timetable = { classroom, timetable: [] };\r\n        let genePoolClass = genePool[classroom];\r\n        days.forEach((day, j) => {\r\n            let dayTimeTable = [];\r\n            let slots = day.slots;\r\n            for (let k = 0; k < slots; k++) {\r\n                let gene;\r\n\r\n                // Chance to mutate the gene\r\n                if (_.random(0, 1, true) < MUTATION_RATE) {\r\n                    let slot = _.sample(genePoolClass);\r\n                    gene = new Gene(slot.teacher, slot.subject);\r\n                } else {\r\n                    // Crossover with other parent instead\r\n                    gene =\r\n                        _.random(0, 1, true) < CROSSOVER_RATE\r\n                            ? parent1.timetables[i].timetable[j][k]\r\n                            : parent2.timetables[i].timetable[j][k];\r\n                }\r\n                dayTimeTable.push(gene);\r\n            }\r\n            timetable.timetable.push(dayTimeTable);\r\n        });\r\n        timetables.push(timetable);\r\n    });\r\n\r\n    return new Chromosome(timetables);\r\n};","import _ from \"lodash\";\r\nimport Gene from \"./model/Gene.js\";\r\n\r\nconst calculateCosts = (\r\n    timetables,\r\n    genePool,\r\n    days,\r\n    classrooms,\r\n    subject_data\r\n) => {\r\n    let cost = 0;\r\n\r\n    // ================================\r\n    //         Hard Constraints\r\n    //\r\n    //  1. One teacher cannot be present in multiple classrooms at the same time.\r\n    //  2. The slots alloted to the teacher should be satisifed by the number of lectures\r\n    //\r\n    // ================================\r\n\r\n    // One teacher cannot be in multiple classrooms at same time\r\n    _.forEach(days, (day, i) => {\r\n        for (let j = 0; j < day.slots; j++) {\r\n            let slotList = [];\r\n            _.forEach(timetables, (t) => {\r\n                let slot = t.timetable[i][j];\r\n                if (slot.teacher !== \"\") {\r\n                    slotList.push(slot.teacher);\r\n                }\r\n            });\r\n            let uniqueSlotList = _.uniq(slotList);\r\n            if (uniqueSlotList.length < slotList.length) {\r\n                cost += slotList.length - uniqueSlotList.length;\r\n            }\r\n        }\r\n    });\r\n\r\n    // The slots alloted to the teacher should be satisifed by the number of lectures\r\n    _.forEach(timetables, (timetable) => {\r\n        let _genePool = genePool[timetable.classroom];\r\n        _.forEach(_.flatten(timetable.timetable), (lecture) => {\r\n            if (lecture.teacher !== \"\" && lecture.subject !== \"\") {\r\n                let geneIndex = _.findIndex(\r\n                    _genePool,\r\n                    (_gp) =>\r\n                        _gp.teacher === lecture.teacher &&\r\n                        _gp.subject === lecture.subject\r\n                );\r\n                _genePool[geneIndex].slots -= 1;\r\n            }\r\n        });\r\n        _.forEach(_genePool, (gene) => {\r\n            cost += Math.abs(gene.slots);\r\n        });\r\n    });\r\n\r\n    // ================================\r\n    //         Soft Constraints\r\n    //\r\n    // 1. Duplicate consecutive teacher should be avoided in a single day.\r\n    // 2. Lectures should be divided uniformly in tine slots\r\n    // ================================\r\n\r\n    // Duplicate consecutive teacher should be avoided in a single day.\r\n    _.forEach(timetables, (timetable) => {\r\n        _.forEach(days, (day, j) => {\r\n            if (day.slots > 1) {\r\n                for (let k = 0; k < day.slots - 1; k++) {\r\n                    if (\r\n                        timetable.timetable[j][k].teacher ===\r\n                        timetable.timetable[j][k + 1].teacher\r\n                    ) {\r\n                        cost += 0.05;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n    // 2. Lectures should be divided uniformly in tine slots;\r\n   /*  let total_slots = 0;\r\n    for(let i=0;i<days.length;i++){\r\n        total_slots += days[i].slots;\r\n    }\r\n\r\n    for(let i=0;i<subject_data.length;i++){\r\n        for(let j=0;j<subject_data[i].subjects.length;j++){\r\n            let subject_name = subject_data[i].subjects[j].subject_name;\r\n            for(let k=0;k<subject_data[i].subjects[j].faculty.length;k++){\r\n                let curr_gene_slots = subject_data[i].subjects[j].faculty[k].slots;\r\n                let min_gap_needed = Math.floor(total_slots/curr_gene_slots);\r\n                let curr_gene = new Gene(subject_data[i].subjects[j].faculty[k].teacher,subject_name);\r\n                for(let l=0;i<timetables.length;i++){\r\n                    let foundIndex  =-1;\r\n                    let currentIndex = 0;\r\n                    for(let m=0;m<timetables[l].timetable.length;m++ ){\r\n                        {\r\n                        if(subject_data[i].subjects[j].faculty[k].classrooms.includes(timetables[l].classroom)){\r\n                        for(let n=0;n<timetables[l].timetable[m].length;n++){\r\n                            if(foundIndex===-1){\r\n                                if(timetables[l].timetable[m][n].teacher === curr_gene.teacher && timetables[l].timetable[m][n].subject === curr_gene.subject){\r\n                                    foundIndex = n;\r\n                                    break;\r\n                                }\r\n                            }else if(timetables[l].timetable[m][n].teacher === curr_gene.teacher && timetables[l].timetable[m][n].subject === curr_gene.subject){\r\n                                if(currentIndex<min_gap_needed){\r\n                                    cost+=0.05;\r\n                                }\r\n                            }else{\r\n                                currentIndex++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                        \r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    } */\r\n\r\n    return cost;\r\n};\r\n\r\nconst sortPopulation = (\r\n    population,\r\n    genePool,\r\n    days,\r\n    classrooms,\r\n    subject_data\r\n) => {\r\n    population.forEach((chromosome) => {\r\n        chromosome.cost = calculateCosts(\r\n            chromosome.timetables,\r\n            _.cloneDeep(genePool),\r\n            days,\r\n            classrooms,\r\n            subject_data\r\n        );\r\n    });\r\n\r\n    let sortedPopulation = _.sortBy(\r\n        population,\r\n        (chromosome) => chromosome.cost\r\n    );\r\n\r\n    return sortedPopulation;\r\n};\r\n\r\nexport default sortPopulation;","import _ from \"lodash\";\r\nimport {\r\n  PARENT_SIZE,\r\n  MAX_GENERATION_SIZE,\r\n  SIMILARITY_THRESHOLD,\r\n  POPULATION_SIZE,\r\n} from \"../../constants/config.js\";\r\nimport Population from \"./Population.js\";\r\nimport { crossover } from \"../crossover.js\";\r\nimport sortPopulation from \"../cost.js\";\r\n\r\nexport default class GeneticTimeTable {\r\n  constructor(working_days, classrooms, school_data, debug = false) {\r\n    this.working_days = working_days;\r\n    this.classrooms = classrooms;\r\n    this.school_data = school_data;\r\n    this.debug = debug;\r\n  }\r\n\r\n  // Select the fittest chromosomes\r\n  selectFittest(population, genePool) {\r\n    // Sort the population\r\n    population = sortPopulation(\r\n      population,\r\n      genePool,\r\n      this.working_days,\r\n      this.classrooms,\r\n      this.school_data\r\n    );\r\n\r\n    // Select top PARENT_SIZE chromosomes\r\n    let fittestChromosomes = _.slice(population, 0, PARENT_SIZE);\r\n\r\n    // Return fittest chromosomes\r\n    return fittestChromosomes;\r\n  }\r\n\r\n  // Returns the best generated timetable\r\n  run() {\r\n    let generation = 0;\r\n    let previousBestCost = 0;\r\n    let similarityCount = 0;\r\n\r\n    // Initialize population\r\n    let population = new Population(\r\n      this.working_days,\r\n      this.classrooms,\r\n      this.school_data\r\n    );\r\n\r\n    //gene pool is set of unique subjects with their teachers & classrooms\r\n    let _population = population.getPopulation();\r\n    let genePool = population.getGenePool();\r\n\r\n    // Get the best solution\r\n    while (generation < MAX_GENERATION_SIZE) {\r\n      let fitChromosomes = this.selectFittest(_population, genePool);\r\n      let bestCost = fitChromosomes[0].cost;\r\n\r\n      // Print debug info in console\r\n      if (this.debug) {\r\n        console.log(`Generation = ${generation + 1}, Best Cost = ${bestCost}`);\r\n      }\r\n\r\n      // If cost is 0, return the chromosome\r\n      if (bestCost === 0) {\r\n        return fitChromosomes[0];\r\n      }\r\n\r\n      // Check similarity according to SIMILARITY_THRESHOLD\r\n      if (bestCost < 1 && bestCost === previousBestCost) {\r\n        similarityCount++;\r\n        if (similarityCount === SIMILARITY_THRESHOLD) {\r\n          return fitChromosomes[0];\r\n        }\r\n      } else {\r\n        similarityCount = 0;\r\n      }\r\n      previousBestCost = bestCost;\r\n\r\n      // Create new generation\r\n      let nextGeneration = [];\r\n      for (let i = 0; i < POPULATION_SIZE; i++) {\r\n        let [firstParent, secondParent] = _.sampleSize(fitChromosomes, 2);\r\n        nextGeneration.push(\r\n          crossover(\r\n            firstParent,\r\n            secondParent,\r\n            genePool,\r\n            this.classrooms,\r\n            this.working_days\r\n          )\r\n        );\r\n      }\r\n\r\n      // Go to the next generation\r\n      _population = nextGeneration;\r\n      generation++;\r\n    }\r\n    return _population[0];\r\n  }\r\n}\r\n","import GeneticTimeTable from \"../algorithm/model/GeneticTimeTable.js\";\r\n\r\nconst gene = async (workingDays, classrooms, courses) => {\r\n  const geneticTimeTable = new GeneticTimeTable(\r\n    workingDays,\r\n    classrooms,\r\n    courses,\r\n    false\r\n  );\r\n  const bestChild = await geneticTimeTable.run();\r\n\r\n  return bestChild;\r\n};\r\n\r\nonmessage = (e) => {\r\n  const { workingDays, classrooms, courses } = e.data;\r\n  gene(workingDays, classrooms, courses).then((bestChild) => {\r\n    postMessage(bestChild);\r\n  });\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [49], function() { return __webpack_require__(9943); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"4c5d0369\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/schedulex/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t943: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkschedulex\"] = self[\"webpackChunkschedulex\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(49).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["Gene","teacher","subject","this","Chromosome","timetables","cost","Population","working_days","classrooms","school_data","genePool","createGenePool","population","generatePopulation","forEach","classroom","slots","section","subjects","faculty","push","subject_name","i","classTimetable","timetable","day","dayTimeTable","j","randomSubject","_","crossover","parent1","parent2","days","temp","genePoolClass","k","gene","slot","subject_data","chromosome","slotList","t","uniqueSlotList","length","_genePool","lecture","geneIndex","_gp","Math","abs","calculateCosts","GeneticTimeTable","debug","sortPopulation","generation","previousBestCost","similarityCount","_population","getPopulation","getGenePool","fitChromosomes","selectFittest","bestCost","console","log","nextGeneration","firstParent","secondParent","workingDays","courses","geneticTimeTable","run","bestChild","onmessage","e","data","then","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","x","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","f","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","nmd","paths","children","p","installedChunks","importScripts","chunkLoadingGlobal","self","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next"],"sourceRoot":""}